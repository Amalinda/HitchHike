#include <TimerOne.h>

int adc_val = 0;
int data[295] = {384,383,381,378,380,379,379,379,378,377,376,377,380,382,383,375,367,367,364,362,358,358,359,361,360,361,359,356,355,356,356,354,355,353,358,357,358,360,355,353,356,358,359,358,354,351,352,348,339,335,329,322,317,323,341,364,392,421,471,522,568,599,612,605,575,522,457,402,370,346,334,329,333,339,346,346,347,346,348,348,348,345,347,347,347,349,345,342,342,344,345,346,343,345,347,349,346,346,343,342,342,346,346,345,343,341,344,342,343,342,341,342,344,344,345,346,343,342,346,346,347,347,342,343,345,346,349,346,345,342,344,346,346,347,343,341,341,344,345,343,341,340,340,342,341,339,340,337,338,338,340,338,334,333,334,337,335,334,333,330,332,333,334,333,330,329,332,334,335,336,337,336,342,345,350,351,352,351,356,359,361,360,358,358,360,362,364,364,360,360,361,363,363,365,360,358,363,362,364,364,360,359,362,363,361,363,361,361,362,365,366,363,362,360,361,364,361,361,361,358,361,360,361,359,357,356,357,357,358,359,355,354,355,357,358,358,355,355,355,360,358,357,356,353,357,358,358,357,353,352,353,354,356,355,355,355,355,358,358,357,355,354,354,356,358,355,355,353,354,356,358,356,356,356,358,357,358,357,355,355,356,358,361,365,364,365,367,369,371,371,371,373,374,376,379};
int index = 0;

void setup(void)
{
  //Serial.begin(9600);
  
  pinMode(13, OUTPUT);

  pinMode(10, INPUT); // Setup for leads off detection LO +
  pinMode(11, INPUT); // Setup for leads off detection LO -

  pinMode(9, OUTPUT);
  pinMode(8, OUTPUT);

  pinMode(7, OUTPUT);
  pinMode(6, OUTPUT);
  pinMode(5, OUTPUT);
  pinMode(4, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(2, OUTPUT);
  pinMode(1, OUTPUT);
  pinMode(0, OUTPUT);
  Timer1.initialize(5000);
  Timer1.attachInterrupt(timer_ISR);
}



void timer_ISR(void)
{

  if (index<=294){
    adc_val = data[index];
  }
  else{
    index=0;
    adc_val = data[index];
  }
  index=index+1;
  
  //adc_val = 470;
    
  PORTD = adc_val & B11111111;
  digitalWrite(8, (adc_val>>8) & B00000001);
  digitalWrite(9, (adc_val>>9) & B00000001);

    /*
   if ((digitalRead(10) == 1) || (digitalRead(11) == 1)) {

      PORTD = B00000000;
      digitalWrite(8, 0);
      digitalWrite(9, 0);
      
      //Serial.println('!');
    }
    else {
      adc_val = analogRead(A0);
      PORTD = adc_val & B11111111;
      digitalWrite(8, (adc_val>>8) & B00000001);
      digitalWrite(9, (adc_val>>9) & B00000001);
      
      //Serial.println(analogRead(A0));
    }
    */
    
}

void loop(void)
{
}
